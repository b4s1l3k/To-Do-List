[debug] > Exec(run, None, None)
[debug] Evaluating tasks: Compile / run
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[info] compiling 5 Scala sources to C:\Scala\To-Do List\target\scala-2.13\classes ...
[error] C:\Scala\To-Do List\app\Models\Tasks\TasksMethods.scala:132:22: match may not be exhaustive.
[error] It would fail on the following input: None
[error]         allTasks.find(_.id == task.id) match {
[error]                      ^
[error] one error found
[error] (Compile / compileIncremental) Compilation failed
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[info] compiling 5 Scala sources to C:\Scala\To-Do List\target\scala-2.13\classes ...
[error] C:\Scala\To-Do List\app\Models\Tasks\TasksMethods.scala:132:22: match may not be exhaustive.
[error] It would fail on the following input: None
[error]         allTasks.find(_.id == task.id) match {
[error]                      ^
[error] one error found
[error] (Compile / compileIncremental) Compilation failed
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[info] compiling 5 Scala sources to C:\Scala\To-Do List\target\scala-2.13\classes ...
[info] done compiling
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Exporting web-assets:to-do-list
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[info] compiling 1 Scala source to C:\Scala\To-Do List\target\scala-2.13\classes ...
[info] done compiling
[debug] Forcing garbage collection...
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Exporting web-assets:to-do-list
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[info] compiling 1 Scala source to C:\Scala\To-Do List\target\scala-2.13\classes ...
[info] done compiling
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Exporting web-assets:to-do-list
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[info] compiling 1 Scala source to C:\Scala\To-Do List\target\scala-2.13\classes ...
[info] done compiling
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Exporting web-assets:to-do-list
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[info] compiling 1 Scala source to C:\Scala\To-Do List\target\scala-2.13\classes ...
[info] done compiling
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Exporting web-assets:to-do-list
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[info] compiling 1 Scala source to C:\Scala\To-Do List\target\scala-2.13\classes ...
[info] done compiling
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Exporting web-assets:to-do-list
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[info] compiling 1 Scala source to C:\Scala\To-Do List\target\scala-2.13\classes ...
[info] done compiling
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Exporting web-assets:to-do-list
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[info] compiling 4 Scala sources to C:\Scala\To-Do List\target\scala-2.13\classes ...
[error] C:\Scala\To-Do List\app\controllers\ToDoListController.scala:46:34: type mismatch;
[error]  found   : Int
[error]  required: Option[Int]
[error]     TasksMethods.readOneTask(id, userId).map { task =>
[error]                                  ^
[error] C:\Scala\To-Do List\app\controllers\ToDoListController.scala:83:33: type mismatch;
[error]  found   : Int
[error]  required: Option[Int]
[error]         TasksMethods.createTask(userId, formData.title, formData.description, formData.dueDate, formData.supplement)
[error]                                 ^
[error] C:\Scala\To-Do List\app\controllers\ToDoListController.scala:109:34: type mismatch;
[error]  found   : Int
[error]  required: Option[Int]
[error]     TasksMethods.readOneTask(id, userId).map { task =>
[error]                                  ^
[error] C:\Scala\To-Do List\app\controllers\ToDoListController.scala:134:32: type mismatch;
[error]  found   : Int
[error]  required: Option[Int]
[error]         val updatedTask = Task(userId, formData.id, formData.title, formData.description, formData.dueDate, formData.supplement)
[error]                                ^
[error] C:\Scala\To-Do List\app\controllers\ToDoListController.scala:135:44: type mismatch;
[error]  found   : Int
[error]  required: Option[Int]
[error]         TasksMethods.editTask(updatedTask, userId).map { _ =>
[error]                                            ^
[error] C:\Scala\To-Do List\app\controllers\ToDoListController.scala:160:52: type mismatch;
[error]  found   : Int
[error]  required: Option[Int]
[error]     val deletedTask = TasksMethods.readOneTask(id, userId)
[error]                                                    ^
[error] C:\Scala\To-Do List\app\controllers\ToDoListController.scala:183:48: type mismatch;
[error]  found   : Int
[error]  required: Option[Int]
[error]       deletedTask <- TasksMethods.deletedTasks(userId)
[error]                                                ^
[error] C:\Scala\To-Do List\app\controllers\ToDoListController.scala:199:36: type mismatch;
[error]  found   : Int
[error]  required: Option[Int]
[error]     TasksMethods.clearTable(table, userId)
[error]                                    ^
[error] 8 errors found
[debug] Forcing garbage collection...
[error] (Compile / compileIncremental) Compilation failed
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[info] compiling 4 Scala sources to C:\Scala\To-Do List\target\scala-2.13\classes ...
[info] done compiling
[info] compiling 10 Scala sources to C:\Scala\To-Do List\target\scala-2.13\classes ...
[error] C:\Scala\To-Do List\app\Models\Tasks\TaskForm.scala:17:12: type mismatch;
[error]  found   : (Option[Int], Int, String, String, java.time.LocalDate, Option[String]) => Models.Tasks.Task
[error]  required: (Int, Int, String, String, java.time.LocalDate, Option[String]) => ?
[error]     )(Task.apply)(Task.unapply)
[error]            ^
[error] C:\Scala\To-Do List\app\Models\Tasks\TaskForm.scala:17:24: missing argument list for method unapply in object Task
[error] Unapplied methods are only converted to functions when a function type is expected.
[error] You can make this conversion explicit by writing `unapply _` or `unapply(_)` instead of `unapply`.
[error]     )(Task.apply)(Task.unapply)
[error]                        ^
[error] C:\Scala\To-Do List\app\Models\Tasks\TaskForm.scala:28:12: type mismatch;
[error]  found   : (Option[Int], Int, String, String, java.time.LocalDate, Option[String]) => Models.Tasks.Task
[error]  required: (Int, Int, String, String, java.time.LocalDate, Option[String]) => ?
[error]     )(Task.apply)(Task.unapply)
[error]            ^
[error] C:\Scala\To-Do List\app\Models\Tasks\TaskForm.scala:28:24: missing argument list for method unapply in object Task
[error] Unapplied methods are only converted to functions when a function type is expected.
[error] You can make this conversion explicit by writing `unapply _` or `unapply(_)` instead of `unapply`.
[error]     )(Task.apply)(Task.unapply)
[error]                        ^
[error] four errors found
[error] (Compile / compileIncremental) Compilation failed
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[info] compiling 4 Scala sources to C:\Scala\To-Do List\target\scala-2.13\classes ...
[info] done compiling
[info] compiling 10 Scala sources to C:\Scala\To-Do List\target\scala-2.13\classes ...
[error] C:\Scala\To-Do List\app\Models\Tasks\TaskForm.scala:17:12: type mismatch;
[error]  found   : (Option[Int], Int, String, String, java.time.LocalDate, Option[String]) => Models.Tasks.Task
[error]  required: (Int, Int, String, String, java.time.LocalDate, Option[String]) => ?
[error]     )(Task.apply)(Task.unapply)
[error]            ^
[error] C:\Scala\To-Do List\app\Models\Tasks\TaskForm.scala:17:24: missing argument list for method unapply in object Task
[error] Unapplied methods are only converted to functions when a function type is expected.
[error] You can make this conversion explicit by writing `unapply _` or `unapply(_)` instead of `unapply`.
[error]     )(Task.apply)(Task.unapply)
[error]                        ^
[error] C:\Scala\To-Do List\app\Models\Tasks\TaskForm.scala:28:12: type mismatch;
[error]  found   : (Option[Int], Int, String, String, java.time.LocalDate, Option[String]) => Models.Tasks.Task
[error]  required: (Int, Int, String, String, java.time.LocalDate, Option[String]) => ?
[error]     )(Task.apply)(Task.unapply)
[error]            ^
[error] C:\Scala\To-Do List\app\Models\Tasks\TaskForm.scala:28:24: missing argument list for method unapply in object Task
[error] Unapplied methods are only converted to functions when a function type is expected.
[error] You can make this conversion explicit by writing `unapply _` or `unapply(_)` instead of `unapply`.
[error]     )(Task.apply)(Task.unapply)
[error]                        ^
[error] four errors found
[error] (Compile / compileIncremental) Compilation failed
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[info] compiling 5 Scala sources to C:\Scala\To-Do List\target\scala-2.13\classes ...
[info] done compiling
[info] compiling 10 Scala sources to C:\Scala\To-Do List\target\scala-2.13\classes ...
[info] done compiling
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Exporting web-assets:to-do-list
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[warn] Canceling execution...
[debug] Forcing garbage collection...
[error] Cancelled: run
[error] Cancelled: run
[error] Use 'last' for the full log.
[debug] > Exec(idea-shell, None, None)
